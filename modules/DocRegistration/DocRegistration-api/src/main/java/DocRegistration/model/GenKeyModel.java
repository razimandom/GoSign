/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package DocRegistration.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the GenKey service. Represents a row in the &quot;genkey_data&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link DocRegistration.model.impl.GenKeyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DocRegistration.model.impl.GenKeyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see GenKey
 * @see DocRegistration.model.impl.GenKeyImpl
 * @see DocRegistration.model.impl.GenKeyModelImpl
 * @generated
 */
@ProviderType
public interface GenKeyModel extends BaseModel<GenKey> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a gen key model instance should use the {@link GenKey} interface instead.
	 */

	/**
	 * Returns the primary key of this gen key.
	 *
	 * @return the primary key of this gen key
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this gen key.
	 *
	 * @param primaryKey the primary key of this gen key
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user ID of this gen key.
	 *
	 * @return the user ID of this gen key
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this gen key.
	 *
	 * @param userId the user ID of this gen key
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this gen key.
	 *
	 * @return the user uuid of this gen key
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this gen key.
	 *
	 * @param userUuid the user uuid of this gen key
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the key_version of this gen key.
	 *
	 * @return the key_version of this gen key
	 */
	public long getKey_version();

	/**
	 * Sets the key_version of this gen key.
	 *
	 * @param key_version the key_version of this gen key
	 */
	public void setKey_version(long key_version);

	/**
	 * Returns the key_date created of this gen key.
	 *
	 * @return the key_date created of this gen key
	 */
	@AutoEscape
	public String getKey_dateCreated();

	/**
	 * Sets the key_date created of this gen key.
	 *
	 * @param key_dateCreated the key_date created of this gen key
	 */
	public void setKey_dateCreated(String key_dateCreated);

	/**
	 * Returns the privatekey_ data of this gen key.
	 *
	 * @return the privatekey_ data of this gen key
	 */
	@AutoEscape
	public String getPrivatekey_Data();

	/**
	 * Sets the privatekey_ data of this gen key.
	 *
	 * @param privatekey_Data the privatekey_ data of this gen key
	 */
	public void setPrivatekey_Data(String privatekey_Data);

	/**
	 * Returns the publickey_ data of this gen key.
	 *
	 * @return the publickey_ data of this gen key
	 */
	@AutoEscape
	public String getPublickey_Data();

	/**
	 * Sets the publickey_ data of this gen key.
	 *
	 * @param publickey_Data the publickey_ data of this gen key
	 */
	public void setPublickey_Data(String publickey_Data);

	/**
	 * Returns the salt_ data of this gen key.
	 *
	 * @return the salt_ data of this gen key
	 */
	@AutoEscape
	public String getSalt_Data();

	/**
	 * Sets the salt_ data of this gen key.
	 *
	 * @param salt_Data the salt_ data of this gen key
	 */
	public void setSalt_Data(String salt_Data);

	/**
	 * Returns the vector_ data of this gen key.
	 *
	 * @return the vector_ data of this gen key
	 */
	@AutoEscape
	public String getVector_Data();

	/**
	 * Sets the vector_ data of this gen key.
	 *
	 * @param vector_Data the vector_ data of this gen key
	 */
	public void setVector_Data(String vector_Data);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DocRegistration.model.GenKey genKey);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DocRegistration.model.GenKey> toCacheModel();

	@Override
	public DocRegistration.model.GenKey toEscapedModel();

	@Override
	public DocRegistration.model.GenKey toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}