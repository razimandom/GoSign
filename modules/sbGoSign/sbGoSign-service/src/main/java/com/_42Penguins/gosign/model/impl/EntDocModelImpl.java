/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com._42Penguins.gosign.model.impl;

import aQute.bnd.annotation.ProviderType;

import com._42Penguins.gosign.model.EntDoc;
import com._42Penguins.gosign.model.EntDocModel;
import com._42Penguins.gosign.model.EntDocSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EntDoc service. Represents a row in the &quot;document_data&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link EntDocModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EntDocImpl}.
 * </p>
 *
 * @author Raziman Dom
 * @see EntDocImpl
 * @see EntDoc
 * @see EntDocModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class EntDocModelImpl extends BaseModelImpl<EntDoc>
	implements EntDocModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ent doc model instance should use the {@link EntDoc} interface instead.
	 */
	public static final String TABLE_NAME = "document_data";
	public static final Object[][] TABLE_COLUMNS = {
			{ "docId", Types.BIGINT },
			{ "fileId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "req_name", Types.VARCHAR },
			{ "req_email", Types.VARCHAR },
			{ "sign_name", Types.VARCHAR },
			{ "sign_email", Types.VARCHAR },
			{ "doc_type", Types.VARCHAR },
			{ "doc_md5", Types.VARCHAR },
			{ "doc_status", Types.VARCHAR },
			{ "doc_deadline", Types.VARCHAR },
			{ "doc_description", Types.VARCHAR },
			{ "doc_signature", Types.VARCHAR },
			{ "req_dateCreated", Types.VARCHAR },
			{ "req_dateModified", Types.VARCHAR },
			{ "req_timeCreated", Types.VARCHAR },
			{ "req_timeModified", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("docId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("req_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("req_email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sign_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sign_email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("doc_type", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("doc_md5", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("doc_status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("doc_deadline", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("doc_description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("doc_signature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("req_dateCreated", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("req_dateModified", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("req_timeCreated", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("req_timeModified", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table document_data (docId LONG not null primary key,fileId LONG,userId LONG,req_name VARCHAR(75) null,req_email VARCHAR(75) null,sign_name VARCHAR(75) null,sign_email VARCHAR(75) null,doc_type VARCHAR(75) null,doc_md5 VARCHAR(75) null,doc_status VARCHAR(75) null,doc_deadline VARCHAR(75) null,doc_description VARCHAR(75) null,doc_signature VARCHAR(75) null,req_dateCreated VARCHAR(75) null,req_dateModified VARCHAR(75) null,req_timeCreated VARCHAR(75) null,req_timeModified VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table document_data";
	public static final String ORDER_BY_JPQL = " ORDER BY entDoc.docId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY document_data.docId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com._42Penguins.gosign.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com._42Penguins.gosign.model.EntDoc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com._42Penguins.gosign.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com._42Penguins.gosign.model.EntDoc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com._42Penguins.gosign.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com._42Penguins.gosign.model.EntDoc"),
			true);
	public static final long SIGN_EMAIL_COLUMN_BITMASK = 1L;
	public static final long USERID_COLUMN_BITMASK = 2L;
	public static final long DOCID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EntDoc toModel(EntDocSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EntDoc model = new EntDocImpl();

		model.setDocId(soapModel.getDocId());
		model.setFileId(soapModel.getFileId());
		model.setUserId(soapModel.getUserId());
		model.setReq_name(soapModel.getReq_name());
		model.setReq_email(soapModel.getReq_email());
		model.setSign_name(soapModel.getSign_name());
		model.setSign_email(soapModel.getSign_email());
		model.setDoc_type(soapModel.getDoc_type());
		model.setDoc_md5(soapModel.getDoc_md5());
		model.setDoc_status(soapModel.getDoc_status());
		model.setDoc_deadline(soapModel.getDoc_deadline());
		model.setDoc_description(soapModel.getDoc_description());
		model.setDoc_signature(soapModel.getDoc_signature());
		model.setReq_dateCreated(soapModel.getReq_dateCreated());
		model.setReq_dateModified(soapModel.getReq_dateModified());
		model.setReq_timeCreated(soapModel.getReq_timeCreated());
		model.setReq_timeModified(soapModel.getReq_timeModified());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EntDoc> toModels(EntDocSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EntDoc> models = new ArrayList<EntDoc>(soapModels.length);

		for (EntDocSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com._42Penguins.gosign.service.util.ServiceProps.get(
				"lock.expiration.time.com._42Penguins.gosign.model.EntDoc"));

	public EntDocModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _docId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDocId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _docId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EntDoc.class;
	}

	@Override
	public String getModelClassName() {
		return EntDoc.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("docId", getDocId());
		attributes.put("fileId", getFileId());
		attributes.put("userId", getUserId());
		attributes.put("req_name", getReq_name());
		attributes.put("req_email", getReq_email());
		attributes.put("sign_name", getSign_name());
		attributes.put("sign_email", getSign_email());
		attributes.put("doc_type", getDoc_type());
		attributes.put("doc_md5", getDoc_md5());
		attributes.put("doc_status", getDoc_status());
		attributes.put("doc_deadline", getDoc_deadline());
		attributes.put("doc_description", getDoc_description());
		attributes.put("doc_signature", getDoc_signature());
		attributes.put("req_dateCreated", getReq_dateCreated());
		attributes.put("req_dateModified", getReq_dateModified());
		attributes.put("req_timeCreated", getReq_timeCreated());
		attributes.put("req_timeModified", getReq_timeModified());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long docId = (Long)attributes.get("docId");

		if (docId != null) {
			setDocId(docId);
		}

		Long fileId = (Long)attributes.get("fileId");

		if (fileId != null) {
			setFileId(fileId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String req_name = (String)attributes.get("req_name");

		if (req_name != null) {
			setReq_name(req_name);
		}

		String req_email = (String)attributes.get("req_email");

		if (req_email != null) {
			setReq_email(req_email);
		}

		String sign_name = (String)attributes.get("sign_name");

		if (sign_name != null) {
			setSign_name(sign_name);
		}

		String sign_email = (String)attributes.get("sign_email");

		if (sign_email != null) {
			setSign_email(sign_email);
		}

		String doc_type = (String)attributes.get("doc_type");

		if (doc_type != null) {
			setDoc_type(doc_type);
		}

		String doc_md5 = (String)attributes.get("doc_md5");

		if (doc_md5 != null) {
			setDoc_md5(doc_md5);
		}

		String doc_status = (String)attributes.get("doc_status");

		if (doc_status != null) {
			setDoc_status(doc_status);
		}

		String doc_deadline = (String)attributes.get("doc_deadline");

		if (doc_deadline != null) {
			setDoc_deadline(doc_deadline);
		}

		String doc_description = (String)attributes.get("doc_description");

		if (doc_description != null) {
			setDoc_description(doc_description);
		}

		String doc_signature = (String)attributes.get("doc_signature");

		if (doc_signature != null) {
			setDoc_signature(doc_signature);
		}

		String req_dateCreated = (String)attributes.get("req_dateCreated");

		if (req_dateCreated != null) {
			setReq_dateCreated(req_dateCreated);
		}

		String req_dateModified = (String)attributes.get("req_dateModified");

		if (req_dateModified != null) {
			setReq_dateModified(req_dateModified);
		}

		String req_timeCreated = (String)attributes.get("req_timeCreated");

		if (req_timeCreated != null) {
			setReq_timeCreated(req_timeCreated);
		}

		String req_timeModified = (String)attributes.get("req_timeModified");

		if (req_timeModified != null) {
			setReq_timeModified(req_timeModified);
		}
	}

	@JSON
	@Override
	public long getDocId() {
		return _docId;
	}

	@Override
	public void setDocId(long docId) {
		_docId = docId;
	}

	@JSON
	@Override
	public long getFileId() {
		return _fileId;
	}

	@Override
	public void setFileId(long fileId) {
		_fileId = fileId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getReq_name() {
		if (_req_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _req_name;
		}
	}

	@Override
	public void setReq_name(String req_name) {
		_req_name = req_name;
	}

	@JSON
	@Override
	public String getReq_email() {
		if (_req_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _req_email;
		}
	}

	@Override
	public void setReq_email(String req_email) {
		_req_email = req_email;
	}

	@JSON
	@Override
	public String getSign_name() {
		if (_sign_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _sign_name;
		}
	}

	@Override
	public void setSign_name(String sign_name) {
		_sign_name = sign_name;
	}

	@JSON
	@Override
	public String getSign_email() {
		if (_sign_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _sign_email;
		}
	}

	@Override
	public void setSign_email(String sign_email) {
		_columnBitmask |= SIGN_EMAIL_COLUMN_BITMASK;

		if (_originalSign_email == null) {
			_originalSign_email = _sign_email;
		}

		_sign_email = sign_email;
	}

	public String getOriginalSign_email() {
		return GetterUtil.getString(_originalSign_email);
	}

	@JSON
	@Override
	public String getDoc_type() {
		if (_doc_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_type;
		}
	}

	@Override
	public void setDoc_type(String doc_type) {
		_doc_type = doc_type;
	}

	@JSON
	@Override
	public String getDoc_md5() {
		if (_doc_md5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_md5;
		}
	}

	@Override
	public void setDoc_md5(String doc_md5) {
		_doc_md5 = doc_md5;
	}

	@JSON
	@Override
	public String getDoc_status() {
		if (_doc_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_status;
		}
	}

	@Override
	public void setDoc_status(String doc_status) {
		_doc_status = doc_status;
	}

	@JSON
	@Override
	public String getDoc_deadline() {
		if (_doc_deadline == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_deadline;
		}
	}

	@Override
	public void setDoc_deadline(String doc_deadline) {
		_doc_deadline = doc_deadline;
	}

	@JSON
	@Override
	public String getDoc_description() {
		if (_doc_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_description;
		}
	}

	@Override
	public void setDoc_description(String doc_description) {
		_doc_description = doc_description;
	}

	@JSON
	@Override
	public String getDoc_signature() {
		if (_doc_signature == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_signature;
		}
	}

	@Override
	public void setDoc_signature(String doc_signature) {
		_doc_signature = doc_signature;
	}

	@JSON
	@Override
	public String getReq_dateCreated() {
		if (_req_dateCreated == null) {
			return StringPool.BLANK;
		}
		else {
			return _req_dateCreated;
		}
	}

	@Override
	public void setReq_dateCreated(String req_dateCreated) {
		_req_dateCreated = req_dateCreated;
	}

	@JSON
	@Override
	public String getReq_dateModified() {
		if (_req_dateModified == null) {
			return StringPool.BLANK;
		}
		else {
			return _req_dateModified;
		}
	}

	@Override
	public void setReq_dateModified(String req_dateModified) {
		_req_dateModified = req_dateModified;
	}

	@JSON
	@Override
	public String getReq_timeCreated() {
		if (_req_timeCreated == null) {
			return StringPool.BLANK;
		}
		else {
			return _req_timeCreated;
		}
	}

	@Override
	public void setReq_timeCreated(String req_timeCreated) {
		_req_timeCreated = req_timeCreated;
	}

	@JSON
	@Override
	public String getReq_timeModified() {
		if (_req_timeModified == null) {
			return StringPool.BLANK;
		}
		else {
			return _req_timeModified;
		}
	}

	@Override
	public void setReq_timeModified(String req_timeModified) {
		_req_timeModified = req_timeModified;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			EntDoc.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EntDoc toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EntDoc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EntDocImpl entDocImpl = new EntDocImpl();

		entDocImpl.setDocId(getDocId());
		entDocImpl.setFileId(getFileId());
		entDocImpl.setUserId(getUserId());
		entDocImpl.setReq_name(getReq_name());
		entDocImpl.setReq_email(getReq_email());
		entDocImpl.setSign_name(getSign_name());
		entDocImpl.setSign_email(getSign_email());
		entDocImpl.setDoc_type(getDoc_type());
		entDocImpl.setDoc_md5(getDoc_md5());
		entDocImpl.setDoc_status(getDoc_status());
		entDocImpl.setDoc_deadline(getDoc_deadline());
		entDocImpl.setDoc_description(getDoc_description());
		entDocImpl.setDoc_signature(getDoc_signature());
		entDocImpl.setReq_dateCreated(getReq_dateCreated());
		entDocImpl.setReq_dateModified(getReq_dateModified());
		entDocImpl.setReq_timeCreated(getReq_timeCreated());
		entDocImpl.setReq_timeModified(getReq_timeModified());

		entDocImpl.resetOriginalValues();

		return entDocImpl;
	}

	@Override
	public int compareTo(EntDoc entDoc) {
		long primaryKey = entDoc.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EntDoc)) {
			return false;
		}

		EntDoc entDoc = (EntDoc)obj;

		long primaryKey = entDoc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		EntDocModelImpl entDocModelImpl = this;

		entDocModelImpl._originalUserId = entDocModelImpl._userId;

		entDocModelImpl._setOriginalUserId = false;

		entDocModelImpl._originalSign_email = entDocModelImpl._sign_email;

		entDocModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EntDoc> toCacheModel() {
		EntDocCacheModel entDocCacheModel = new EntDocCacheModel();

		entDocCacheModel.docId = getDocId();

		entDocCacheModel.fileId = getFileId();

		entDocCacheModel.userId = getUserId();

		entDocCacheModel.req_name = getReq_name();

		String req_name = entDocCacheModel.req_name;

		if ((req_name != null) && (req_name.length() == 0)) {
			entDocCacheModel.req_name = null;
		}

		entDocCacheModel.req_email = getReq_email();

		String req_email = entDocCacheModel.req_email;

		if ((req_email != null) && (req_email.length() == 0)) {
			entDocCacheModel.req_email = null;
		}

		entDocCacheModel.sign_name = getSign_name();

		String sign_name = entDocCacheModel.sign_name;

		if ((sign_name != null) && (sign_name.length() == 0)) {
			entDocCacheModel.sign_name = null;
		}

		entDocCacheModel.sign_email = getSign_email();

		String sign_email = entDocCacheModel.sign_email;

		if ((sign_email != null) && (sign_email.length() == 0)) {
			entDocCacheModel.sign_email = null;
		}

		entDocCacheModel.doc_type = getDoc_type();

		String doc_type = entDocCacheModel.doc_type;

		if ((doc_type != null) && (doc_type.length() == 0)) {
			entDocCacheModel.doc_type = null;
		}

		entDocCacheModel.doc_md5 = getDoc_md5();

		String doc_md5 = entDocCacheModel.doc_md5;

		if ((doc_md5 != null) && (doc_md5.length() == 0)) {
			entDocCacheModel.doc_md5 = null;
		}

		entDocCacheModel.doc_status = getDoc_status();

		String doc_status = entDocCacheModel.doc_status;

		if ((doc_status != null) && (doc_status.length() == 0)) {
			entDocCacheModel.doc_status = null;
		}

		entDocCacheModel.doc_deadline = getDoc_deadline();

		String doc_deadline = entDocCacheModel.doc_deadline;

		if ((doc_deadline != null) && (doc_deadline.length() == 0)) {
			entDocCacheModel.doc_deadline = null;
		}

		entDocCacheModel.doc_description = getDoc_description();

		String doc_description = entDocCacheModel.doc_description;

		if ((doc_description != null) && (doc_description.length() == 0)) {
			entDocCacheModel.doc_description = null;
		}

		entDocCacheModel.doc_signature = getDoc_signature();

		String doc_signature = entDocCacheModel.doc_signature;

		if ((doc_signature != null) && (doc_signature.length() == 0)) {
			entDocCacheModel.doc_signature = null;
		}

		entDocCacheModel.req_dateCreated = getReq_dateCreated();

		String req_dateCreated = entDocCacheModel.req_dateCreated;

		if ((req_dateCreated != null) && (req_dateCreated.length() == 0)) {
			entDocCacheModel.req_dateCreated = null;
		}

		entDocCacheModel.req_dateModified = getReq_dateModified();

		String req_dateModified = entDocCacheModel.req_dateModified;

		if ((req_dateModified != null) && (req_dateModified.length() == 0)) {
			entDocCacheModel.req_dateModified = null;
		}

		entDocCacheModel.req_timeCreated = getReq_timeCreated();

		String req_timeCreated = entDocCacheModel.req_timeCreated;

		if ((req_timeCreated != null) && (req_timeCreated.length() == 0)) {
			entDocCacheModel.req_timeCreated = null;
		}

		entDocCacheModel.req_timeModified = getReq_timeModified();

		String req_timeModified = entDocCacheModel.req_timeModified;

		if ((req_timeModified != null) && (req_timeModified.length() == 0)) {
			entDocCacheModel.req_timeModified = null;
		}

		return entDocCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{docId=");
		sb.append(getDocId());
		sb.append(", fileId=");
		sb.append(getFileId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", req_name=");
		sb.append(getReq_name());
		sb.append(", req_email=");
		sb.append(getReq_email());
		sb.append(", sign_name=");
		sb.append(getSign_name());
		sb.append(", sign_email=");
		sb.append(getSign_email());
		sb.append(", doc_type=");
		sb.append(getDoc_type());
		sb.append(", doc_md5=");
		sb.append(getDoc_md5());
		sb.append(", doc_status=");
		sb.append(getDoc_status());
		sb.append(", doc_deadline=");
		sb.append(getDoc_deadline());
		sb.append(", doc_description=");
		sb.append(getDoc_description());
		sb.append(", doc_signature=");
		sb.append(getDoc_signature());
		sb.append(", req_dateCreated=");
		sb.append(getReq_dateCreated());
		sb.append(", req_dateModified=");
		sb.append(getReq_dateModified());
		sb.append(", req_timeCreated=");
		sb.append(getReq_timeCreated());
		sb.append(", req_timeModified=");
		sb.append(getReq_timeModified());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com._42Penguins.gosign.model.EntDoc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>docId</column-name><column-value><![CDATA[");
		sb.append(getDocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileId</column-name><column-value><![CDATA[");
		sb.append(getFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>req_name</column-name><column-value><![CDATA[");
		sb.append(getReq_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>req_email</column-name><column-value><![CDATA[");
		sb.append(getReq_email());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sign_name</column-name><column-value><![CDATA[");
		sb.append(getSign_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sign_email</column-name><column-value><![CDATA[");
		sb.append(getSign_email());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_type</column-name><column-value><![CDATA[");
		sb.append(getDoc_type());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_md5</column-name><column-value><![CDATA[");
		sb.append(getDoc_md5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_status</column-name><column-value><![CDATA[");
		sb.append(getDoc_status());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_deadline</column-name><column-value><![CDATA[");
		sb.append(getDoc_deadline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_description</column-name><column-value><![CDATA[");
		sb.append(getDoc_description());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_signature</column-name><column-value><![CDATA[");
		sb.append(getDoc_signature());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>req_dateCreated</column-name><column-value><![CDATA[");
		sb.append(getReq_dateCreated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>req_dateModified</column-name><column-value><![CDATA[");
		sb.append(getReq_dateModified());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>req_timeCreated</column-name><column-value><![CDATA[");
		sb.append(getReq_timeCreated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>req_timeModified</column-name><column-value><![CDATA[");
		sb.append(getReq_timeModified());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = EntDoc.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			EntDoc.class
		};
	private long _docId;
	private long _fileId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _req_name;
	private String _req_email;
	private String _sign_name;
	private String _sign_email;
	private String _originalSign_email;
	private String _doc_type;
	private String _doc_md5;
	private String _doc_status;
	private String _doc_deadline;
	private String _doc_description;
	private String _doc_signature;
	private String _req_dateCreated;
	private String _req_dateModified;
	private String _req_timeCreated;
	private String _req_timeModified;
	private long _columnBitmask;
	private EntDoc _escapedModel;
}